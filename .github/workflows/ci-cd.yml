name: CI/CD Docker API

# Cambi√© las branches a "master" para que funcione con tu repo actual
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configurar Python (para tests opcionales)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3Ô∏è‚É£ Construir imagen Docker
      - name: Build Docker image
        run: docker build -t breast-cancer-api .

      # 4Ô∏è‚É£ Levantar contenedor en background
      - name: Run Docker container
        run: docker run -d --name test-api -p 5001:5000 breast-cancer-api

      # 5Ô∏è‚É£ Esperar API
      - name: Wait for API
        run: sleep 10

      # 6Ô∏è‚É£ Test GET /
      - name: Test GET /
        run: |
          RESPONSE=$(curl --silent --write-out "%{http_code}" http://localhost:5001/ -o /tmp/response.txt)
          cat /tmp/response.txt
          if [ "$RESPONSE" -ne 200 ]; then
            echo "GET / failed"
            exit 1
          fi

      # 7Ô∏è‚É£ Test POST /predict
      - name: Test POST /predict
        run: |
          RESPONSE=$(curl -s -o /tmp/predict_response.json -w "%{http_code}" -X POST http://localhost:5001/predict \
            -H "Content-Type: application/json" \
            -d '{"features":[17.99,10.38,122.8,1001,0.1184,0.2776,0.3001,0.1471,0.2419,0.07871,1.095,0.9053,8.589,153.4,0.006399,0.04904,0.05373,0.01587,0.03003,0.006193,25.38,17.33,184.6,2019,0.1622,0.6656,0.7119,0.2654,0.4601,0.1189]}')
          cat /tmp/predict_response.json
          if [ "$RESPONSE" -ne 200 ]; then
            echo "POST /predict failed"
            exit 1
          fi

      # 8Ô∏è‚É£ Detener contenedor
      - name: Stop Docker container
        run: docker stop test-api

      # 9Ô∏è‚É£ Login en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # üîü Taggear y push Docker
      - name: Push Docker image
        run: |
          docker tag breast-cancer-api ${{ secrets.DOCKER_USERNAME }}/breast-cancer-api:latest
          docker tag breast-cancer-api ${{ secrets.DOCKER_USERNAME }}/breast-cancer-api:${GITHUB_SHA::8}
          docker push ${{ secrets.DOCKER_USERNAME }}/breast-cancer-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/breast-cancer-api:${GITHUB_SHA::8}
